events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging con m치s detalle
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log warn;

    # Optimizaciones b치sicas
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    client_body_buffer_size 128k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/javascript application/xml+rss
               application/json application/x-font-ttf
               font/opentype image/svg+xml image/x-icon;

    # Upstream to Django application
    upstream django_app {
        server web:8000 fail_timeout=0;
    }

    server {
        listen 80 default_server;
        server_name localhost;
        
        # Tama침o m치ximo de carga
        client_max_body_size 100M;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Static files - con manejo de errores
        location /static/ {
            alias /app/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            access_log off;
            
            # Si no encuentra el archivo, intenta en Django
            try_files $uri $uri/ @django;
        }

        # Media files
        location /media/ {
            alias /app/media/;
            expires 7d;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            access_log off;
            
            # Si no encuentra el archivo, intenta en Django
            try_files $uri $uri/ @django;
        }

        # Django application
        location / {
            try_files $uri @django;
        }

        location @django {
            proxy_pass http://django_app;
            proxy_redirect off;
            
            proxy_set_header Host localhost;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout settings optimizados para hardware limitado
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            send_timeout 30s;
            
            # Buffering
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Favicon
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            try_files /static/favicon.ico =204;
        }

        # Robots.txt
        location = /robots.txt {
            access_log off;
            log_not_found off;
            try_files /static/robots.txt =204;
        }

        # Health check endpoint
        location /health/ {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}