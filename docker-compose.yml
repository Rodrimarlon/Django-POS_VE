version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: django_pos
      POSTGRES_USER: pos_user
      POSTGRES_PASSWORD: pos_password
      # PostgreSQL optimizations for limited RAM
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 256MB
      POSTGRES_WORK_MEM: 4MB
      POSTGRES_MAINTENANCE_WORK_MEM: 32MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_WAL_BUFFERS: 4MB
      POSTGRES_DEFAULT_STATISTICS_TARGET: 100
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    # Memory limits for limited hardware
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pos_user -d django_pos"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - django_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - DJANGO_SETTINGS_MODULE=django_pos.settings.docker
      - DATABASE_URL=postgresql://pos_user:pos_password@db:5432/django_pos
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-this-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      - TIME_ZONE=${TIME_ZONE:-America/Caracas}
      - LANGUAGE_CODE=${LANGUAGE_CODE:-es}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./django_pos:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    # Memory limits for Pentium 4 + 2GB RAM (reduced)
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    depends_on:
      db:
        condition: service_healthy
    networks:
      - django_network

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - ./django_pos/media:/app/media:ro
    depends_on:
      - web
    networks:
      - django_network

networks:
  django_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume: